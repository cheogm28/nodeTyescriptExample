---
openapi: 3.0.1
info:
  title: node-rest-test
  description: REST with NodeJS
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: User
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /Users/{id}:
    post:
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
      tags:
        - User
      description: add Users
      requestBody:
        description: User add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Return the User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        4XX:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /Users/:
    get:
      tags:
        - User
      description: Fetch all Users
      responses:
        200:
          description: Return the User
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User' 
        4XX:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
components:
  schemas:
    
    User:
      type: object
      nullable: true
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: user Name
    Error:
      type: object
